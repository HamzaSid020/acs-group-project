name: Terraform Apply on Commit

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Initialize and Plan for Network
      - name: Terraform Init and Plan in Network Folder
        working-directory: ./Network
        run: |
          terraform init
          terraform plan -out=tfplan_network || exit_code=$?
          if [ "$exit_code" -eq 0 ]; then
            echo "No changes detected in Network."
            echo "skip_network_apply=true" >> $GITHUB_ENV
          elif [ "$exit_code" -eq 2 ]; then
            echo "Changes detected in Network."
            echo "skip_network_apply=false" >> $GITHUB_ENV
          else
            echo "Error during Terraform plan in Network."
            exit $exit_code

      # Apply for Network (Conditional)
      - name: Terraform Apply in Network Folder
        if: env.skip_network_apply == 'false'
        working-directory: ./Network
        run: terraform apply -auto-approve tfplan_network

      # Initialize and Plan for Webserver
      - name: Terraform Init and Plan in Webserver Folder
        working-directory: ./Webserver
        run: |
          terraform init
          terraform plan -out=tfplan_webserver || exit_code=$?
          if [ "$exit_code" -eq 0 ]; then
            echo "No changes detected in Webserver."
            echo "skip_webserver_apply=true" >> $GITHUB_ENV
          elif [ "$exit_code" -eq 2 ]; then
            echo "Changes detected in Webserver."
            echo "skip_webserver_apply=false" >> $GITHUB_ENV
          else
            echo "Error during Terraform plan in Webserver."
            exit $exit_code

      # Apply for Webserver (Conditional)
      - name: Terraform Apply in Webserver Folder
        if: env.skip_webserver_apply == 'false'
        working-directory: ./Webserver
        run: terraform apply -auto-approve tfplan_webserver
